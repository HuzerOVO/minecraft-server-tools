#!/usr/bin/bash

if [[ -h "$0" ]]; then
    cd "$(dirname "$(realpath "$0")")" || exit 2
else
    cd "$(dirname "$0")" || exit 2
fi

source "config.sh"
source "common.sh"

function cli_usage() {
    cat<<__EOF__
Usage: ${0##*/} [COMMAND]

    Command:
    new <instance>          Create and initialize a <instance>.
    update <instance>       Update scripts in a initialized <instance>.
    start <instance>        Start the server for <instance>.
    stop <session>          Stop the server that run in <session>.
    status [instance]       Show a server status, or all instances.
    logs <instance>         Show the server's logs for <instance>.
    list-instances          List all available server instances.
    list-sessions           List all available screen sessions.
    cmd <session> <cmd>     Send a Minescarft command <cmd> to <session>.
    help                    Show this help.
__EOF__
printf "\033[33m
NOTE:
<instance> is a instance name, it can be found here %s.
<session> is a screen session name.
<cmd> is a Minecraft server commnad.

If you start Minecraft server with systemd service,
screen session name and instance name should be the same.
\033[0m" "$CONF_SERVER_DIR"
}

# Default, screen run as user 'minecraft',
# we can only access screen session with this user.
if [[ "$(whoami)" != "$CONF_USER" ]]; then
    error_echo "Please run as user '$CONF_USER'"
    exit 2
fi

if [[ $# -lt 1 ]]; then
    cli_usage
    error_echo "Need a command.";
    exit 2
fi

case $1 in
    new)
        shift
        if [[ -z "$1" ]]; then
            error_echo "Need a instance name."
            exit 2
        fi

        if has_instance "$1"; then
            error_echo "Instance $1 already exist."
            exit 1
        fi

        mkdir -p "$CONF_SERVER_DIR/$1"
        generate_scripts "$1"
        ;;
    update)
        shift
        if [[ -z "$1" ]]; then
            # Update all instances
            instances=$(list_instances)
            if [[ -z "$instances" ]]; then
                error_echo "No instance to update."
                exit 1
            else
                for instance in $instances; do
                    generate_scripts "$instance"
                done
            fi
        else
            # Update the specified instance.
            if has_instance "$1"; then
                generate_scripts "$1"
            else
                error_echo "No this instance: $1."
                exit 1
            fi
        fi
        ;;
    start)
        shift
        if [[ -z "$1" ]]; then
            error_echo "Need a instance to start."
            exit 2
        fi
        if has_instance "$1"; then
            start "$1" || exit 1
        else
            error_echo "No this instance: $1."
            exit 1
        fi
        ;;
    stop)
        shift
        if [[ -z "$1" ]]; then
            error_echo "Need a session to stop."
            exit 2
        fi
        if has_session "$1"; then
            stop "$1" || exit 1
        else
            error_echo "No this session: $1."
            exit 1
        fi
        ;;
    status)
        shift
        if [[ -z "$1" ]]; then
            # Show all instances
            instances=$(list_instances)
            if [[ -z "$instances" ]]; then
                error_echo "No instance to show status."
                exit 1
            else
                for instance in $instances; do
                    status "$instance"
                done
            fi
        else
            # Show the specified instance.
            if has_instance "$1"; then
                status "$1"
            else
                error_echo "No this instance: $1."
                exit 1
            fi
        fi
        ;;
    logs)
        shift
        if [[ -z "$1" ]]; then
            error_echo "Need a instace name to show log."
            exit 2
        fi
        if has_instance "$1"; then
            logs "$1" || exit 1
        else
            error_echo "No this instance: $1."
            exit 1
        fi
        ;;
    list-instances)
        instances=$(list_instances)
        if [[ -z "$instances" ]]; then
            error_echo "No instance to list."
            exit 1
        fi
        for instance in $instances; do
            if [[ -f "$CONF_SERVER_DIR/$instance/screen.session" ]]; then
                printf "%s \033[32m(initialized)\033[0m\n" "$instance"
            else
                printf "%s \033[31m(not initialized)\033[0m\n" "$instance"
            fi
        done
        ;;
    list-sessions)
        sessions=$(list_sessions)
        if [[ -z "$sessions" ]]; then
            error_echo "No session to list."
            exit 1
        else
            echo "$sessions"
        fi
        ;;
    cmd)
        shift
        # $1 is session name now
        if [[ -z "$1" ]]; then
            error_echo "Need a session name to send command."
            exit 2
        fi

        if has_session "$1"; then
            session="$1"
            shift # $* is the server command string now
            cmd "$session" "$*" || exit 1
        else
            error_echo "No this session: $1"
            exit 1
        fi
        ;;
    help | --help | -h)
        cli_usage
        ;;
    *)
        cli_usage
        error_echo "Unknow command: $1"
        exit 2
        ;;
esac

exit 0
