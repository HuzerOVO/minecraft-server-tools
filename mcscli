#!/usr/bin/bash

if [[ -h "$0" ]]; then
    cd "$(dirname "$(realpath "$0")")" || exit 2
else
    cd "$(dirname "$0")" || exit 2
fi

source "common.sh"

function cli_usage() {
    cat<<__EOF__
Usage: ${0##*/} [COMMAND]

Command:
    init <instance> <game>      Initialize a <instance> for game <game>.
    generate-scripts <instance> Generate scripts for <instance>
    start <instance>            Start the server for <instance>.
    stop <session>              Stop the server that run in <session>.
    status [instance]           Show a server status, or all instances.
    list-instances              List all available server instances.
    list-sessions               List all available screen sessions.
    list-supported-games        List all supported games.
    cmd <session> <cmd>         Send a command string <cmd> to <session>.
    help                        Show this help.
__EOF__
printf "\033[33m
NOTE:
<instance> is a instance name.
<session> is a screen session name.
<game> is a game name.
<cmd> is a server commnad.

The <instance> name and the <session> name should be the same if you start
server instance with MCST.
\033[0m"
}

# Default, screen run as user 'minecraft',
# we can only access screen session with this user.
if [[ "$(whoami)" != "$CONF_USER" ]]; then
    error_echo "Please run as user '$CONF_USER'"
    exit 2
fi

if [[ $# -lt 1 ]]; then
    cli_usage
    error_echo "Need a command.";
    exit 2
fi

case $1 in
    init)
        shift
        if [[ -z "$1" ]]; then
            error_echo "Need a instance name."
            exit 2
        fi

        if has_instance "$1" && [[ -d "$CONF_SERVER_DIR/$1/$CONF_MCST_BASE" ]]; then
            error_echo "Instance $1 is already initialized."
            exit 1
        fi

        if [[ -z "$2" ]]; then
            error_echo "Need a game name."
            exit 2 
        fi

        if ! is_supported_game "$2"; then
            if [[ "$3" == "--force" ]]; then
                warn_echo "Force initialize an unsupported game server instance."
            else
                warn_echo "No a supported game: $2"
                warn_echo "If you realy want to initialize it, use 'mcscli init $1 $2 --force'"
                exit 0
            fi
        fi
        init "$1" "$2"
        ;;
    generate-scripts)
        shift
        if [[ -z "$1" ]]; then
            error_echo "Need a instance name."
            exit 2
        fi

        if ! has_instance "$1"; then
            error_echo "No this instance: $1."
            exit 1
        fi

        generate_scripts "$1"
        ;;
    start)
        shift
        if [[ -z "$1" ]]; then
            error_echo "Need a instance to start."
            exit 2
        fi

        if has_instance "$1"; then
            start "$1" || exit 1
        else
            error_echo "No this instance: $1."
            exit 1
        fi
        ;;
    stop)
        shift
        if [[ -z "$1" ]]; then
            error_echo "Need a session to stop."
            exit 2
        fi
        if has_session "$1"; then
            stop "$1" || exit 1
        else
            error_echo "No this session: $1."
            exit 1
        fi
        ;;
    status)
        shift
        if [[ -z "$1" ]]; then
            # Show all instances
            instances=$(list_instances)
            if [[ -z "$instances" ]]; then
                error_echo "No instance to show status."
                exit 1
            else
                for instance in $instances; do
                    status "$instance"
                done
            fi
            unset instances
        else
            # Show the specified instance.
            if has_instance "$1"; then
                status "$1"
            else
                error_echo "No this instance: $1."
                exit 1
            fi
        fi
        ;;
    list-instances)
        instances=$(list_instances)
        if [[ -z "$instances" ]]; then
            error_echo "No instance to list."
            exit 1
        fi
        for instance in $instances; do
            if [[ -d "$CONF_SERVER_DIR/$instance/$CONF_MCST_BASE" ]]; then
                printf "%s \033[32m(initialized)\033[0m\n" "$instance"
            else
                printf "%s \033[31m(not initialized)\033[0m\n" "$instance"
            fi
        done
        unset instances
        ;;
    list-sessions)
        sessions=$(list_sessions)
        if [[ -z "$sessions" ]]; then
            error_echo "No session to list."
            exit 1
        else
            success_echo "$sessions"
        fi
        unset sessions
        ;;
    list-supported-games)
        for games in $(list_supported_games); do
            success_echo "$games"
        done
        unset games
        ;;
    cmd)
        shift
        # $1 is session name now
        if [[ -z "$1" ]]; then
            error_echo "Need a session name to send command."
            exit 2
        fi

        if has_session "$1"; then
            session="$1"
            shift # $* is the server command string now
            cmd "$session" "$*" || exit 1
        else
            error_echo "No this session: $1"
            exit 1
        fi
        ;;
    help | --help | -h)
        cli_usage
        ;;
    *)
        cli_usage
        error_echo "Unknow command: $1"
        exit 2
        ;;
esac

exit 0
